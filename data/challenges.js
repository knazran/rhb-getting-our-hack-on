export default {
  challenges: [
    {
      key: "print",
      title: "Print",
      description: "Print a variable to the console.",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["Fundamentals"],
      task: 'Here is a sample line of code that can be executed in JavaScript:\n\nconsole.log("Hello, World!")\n\nYou can just as easily store a string as a variable and then print it to the console:\n\nlet myString = "Hello, World!"\nconsole.log(myString)\n\nThe above code will print Hello, World! on your console. Try it yourself in the editor on the right!',
      code: "let n = 1\nconsole.log(n)",
      expectedOutput: "Hello, World!",
    },
    {
      key: "arrays",
      title: "Arrays",
      description: "Find the length of an array",
      num_question: "(3/4)",
      difficulty: "Easy",
      categories: ["Fundamentals"],
      task: "Given the following array, what is the length of the array?\n\nlet array = [1, 3, 3, 5, 1, 4, 3]",
      code: "let array = [1, 3, 3, 5, 1, 4, 3]\n\nlet arrayLength = 0\n\nconsole.log(arrayLength)",
      expectedOutput: "7",
    },
    {
      key: "object",
      title: "Objects",
      description: "Size of an object",
      num_question: "(1/3)",
      difficulty: "Easy",
      categories: ["Fundamentals"],
      task: "Given a JavaScript object, what is the size or length of the object?",
      code: "const myObject = {firstname: 'Gareth', lastname: 'Simpson', age: 21}\n\nlet objectSize = 0\n\nconsole.log(objectSize)",
      expectedOutput: "3",
    },
    {
      key: "sorting",
      title: "Sorting",
      description: "Sort an array of strings",
      num_question: "(0/8)",
      difficulty: "Easy",
      categories: ["Fundamentals"],
      task: "Given a string array, how does one sort the array according to alphabetical order?",
      code: "const fruits = ['Banana', 'Orange', 'Apple', 'Mango']\n\nlet sortedFruits = []\n\nconsole.log(sortedFruits)",
      expectedOutput: ["Apple", "Banana", "Mango", "Orange"],
    },
    {
      key: "s1wwsws",
      title: "Reverse a string",
      description: "Reverse a string without affecting special characters",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["String/Array"],
      task: "Given a string, that contains a special character together with alphabets (‘a’ to ‘z’ and ‘A’ to ‘Z’), reverse the string in a way that special characters are not affected.",
      code: "let input = 'Ab,c,de!$'\nlet reversed = ''\nconsole.log(reversed)",
      expectedOutput: "ed,c,bA!$",
    },

    {
      key: "e12e1e",
      title: "Count of triplets",
      description: "Count triplets with sum smaller than a given value",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["String/Array"],
      task: "Given an array of distinct integers and a sum value. Find count of triplets with sum smaller than given sum value. Expected Time Complexity is O(n2).",
      code: "let arr = [5, 1, 3, 4, 7]\nlet sum = 12\nlet tripletCount = 0\nconsole.log(tripletCount)",
      expectedOutput: "4",
    },
    {
      key: "2323dfe",
      title: "Contiguous elements",
      description: "Length of the largest subarray with contiguous elements",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["String/Array"],
      task: "Given an array of distinct integers, find length of the longest subarray which contains numbers that can be arranged in a continuous sequence.",
      code: "let arr = [1, 56, 58, 57, 90, 92, 94, 93, 91, 45]\nlet length = 0\nconsole.log(length)",
      expectedOutput: "5",
    },
    {
      key: "435iou9t",
      title: "No sum in subset",
      description:
        "Find the smallest positive integer value that cannot be represented as sum of any subset of a given array",
      num_question: "(1/1)",
      difficulty: "Hard",
      categories: ["String/Array"],
      task: "Given a sorted array (sorted in non-decreasing order) of positive numbers, find the smallest positive integer value that cannot be represented as sum of elements of any subset of given set. \n\nExpected time complexity is O(n).",
      code: "let arr = [1, 2, 3, 4, 5, 6]\nlet smallest = 0\nconsole.log(smallest)",
      expectedOutput: "22",
    },
    {
      key: "099u30roj",
      title: "Frontend Engineer II Challenge",
      description:
        "This challenge will test your Vue.js fundamentals and see if you're the right fit.",
      num_question: "#1",
      difficulty: "Hard",
      categories: ["RHB challenge", "String/Array"],
      task: "Given the cost of a stock on each day in an array, find the max profit that you can make by buying and selling in those days. \n\nFor example, if the given array is:-\n\nlet array = [100, 180, 260, 310, 40, 535, 695],\n\nthe maximum profit can earned by buying on day 0, selling on day 3. Again buy on day 4 and sell on day 6. \n\nIf the given array of prices is sorted in decreasing order, then profit cannot be earned at all.",
      code: "let prices = [ 100, 180, 260, 310, 40, 535, 695 ];\nlet n = prices.length\n\nfunction maxProfit(prices,/* other relevant args */){return Math.max(...prices)}\n\nconsole.log(maxProfit(prices))",
      expectedOutput: "865",
    },
    {
      key: "kscjksjdh",
      title: "Pythagorean Triplet",
      description: "Pythagorean Triplet in an array",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["String/Array"],
      task: "Given an array of integers, write a function that returns true if there is a triplet (a, b, c) that satisfies a2 + b2 = c2.",
      code: "let arr = [10, 4, 6, 12, 5]\n\nfunction isTripletExist(array) {return true}\n\nconsole.log(isTripletExist(array))",
      expectedOutput: false,
    },
    {
      key: "sdlkfmoerg",
      title: "Zig-Zag array",
      description: "Convert array into Zig-Zag fashion",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["String/Array"],
      task: "Given an array of DISTINCT elements, rearrange the elements of array in zig-zag fashion in O(n) time. The converted array should be in form a < b > c < d > e < f.",
      code: "let arr = [1, 4, 3, 2]\n\nlet zigzagArray = []\n\nconsole.log(zigzagArray)",
      expectedOutput: [1, 4, 2, 3],
    },
    {
      key: "79824",
      title: "Smallest subarray",
      description: "Smallest subarray with sum greater than a given value",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["String/Array"],
      task: "Given an array of integers and a number x, find the smallest subarray with sum greater than the given value.",
      code: "let arr = [1, 11, 100, 1, 0, 200, 3, 2, 1, 250]\nlet x = 280\nlet lenSmallestSubarray = 0\n\nconsole.log(lenSmallestSubarray)",
      expectedOutput: "4",
    },
    {
      key: "fcui99",
      title: "Closest sum",
      description: "A pair in array whose sum is closest to x",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["Sorting And Searching"],
      task: "Given a sorted array and a number x, find a pair in array whose sum is closest to x.",
      code: "let arr = [10, 22, 28, 29, 30, 40]\nlet x = 54\n\nlet pair1 = 0\nlet pair2 = 0\n\nconsole.log(`${pair1} and ${pair2}`)",
      expectedOutput: "22 and 30",
    },
    {
      key: "2-3289oi2io",
      title: "K’th Smallest Element (Part 1)",
      description: "K’th Smallest Element in Unsorted Array",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["Sorting And Searching"],
      task: "Given an array and a number k where k is smaller than the size of the array, we need to find the k’th smallest element in the given array. It is given that all array elements are distinct.",
      code: "let arr = [7, 10, 4, 3, 20, 15]\nlet k = 4\n\nlet smallest = 0\n\nconsole.log(smallest)",
      expectedOutput: "10",
    },
    {
      key: "sqqqcso99",
      title: "DevOps Engineer Challenge",
      description:
        "What are the pros and cons implementing infrastructure as a code for financial institutions.",
      num_question: "#3",
      difficulty: "Hard",
      categories: ["RHB challenge", "Dynamic Programming"],
      task: "Given a set of integers, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum. \n\nIf there is a set S with n elements, then if we assume Subset1 has m elements, Subset2 must have n-m elements and the value of abs(sum(Subset1) – sum(Subset2)) should be minimum.",
      code: "let arr=[3, 1, 4, 2, 2, 1]\n\nfunction findMin(array,/* other relevant args */) { return 0}\n\nconsole.log(findMin(arr))",
      expectedOutput: "1",
    },
    {
      key: "mofi99",
      title: "Min Depth Binary Tree",
      description: "Find Minimum Depth of a Binary Tree",
      num_question: "(1/1)",
      difficulty: "Easy",
      categories: ["Tree"],
      task: "Given a binary tree, find its minimum depth. The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.",
      code: "let minDepth=0\n\nconsole.log(minDepth)",
      expectedOutput: "2",
    },
    {
      key: "cndoi98",
      title: "Max Path Sum Binary Tree",
      description: "Find the max path sum in a binary tree",
      num_question: "(1/1)",
      difficulty: "Hard",
      categories: ["Tree"],
      task: "Given a binary tree, find the maximum path sum. The path may start and end at any node in the tree.",
      code: "let maxPathSum=0\n\nconsole.log(maxPathSum)",
      expectedOutput: "42",
    },
    {
      key: "dslcdso0",
      title: "Longest Path In Matrix",
      description: "Longest path in a matrix with given constraints",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["Dynamic Programming"],
      task: "Given a n*n matrix where all numbers are distinct, find the maximum length path (starting from any cell) such that all cells along the path are in increasing order with a difference of 1.\n\nWe can move in 4 directions from a given cell (i, j), i.e., \n\nwe can move to (i+1, j) or (i, j+1) or (i-1, j) or (i, j-1) with the condition that the adjacent cells have a difference of 1.",
      code: "let matrix = [[ 1, 2, 9 ],[ 5, 3, 8 ],[ 4, 6, 7 ]];\n\nfunction longestPath(matrix) { return 0}\n\nconsole.log(longestPath(matrix))",
      expectedOutput: "4",
    },
    {
      key: "isuc98778",
      title: "Edit Distance",
      description: "Edit Distance Problem | DP-5",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["Dynamic Programming"],
      task: "Given two strings str1 and str2 and below operations that can performed on str1. Find minimum number of edits (operations) required to convert ‘str1’ into ‘str2’.",
      code: "let str1 = 'sunday'\nlet str2 = 'saturday';\n\nfunction editDist(str1,str2,/* other relevant args */) { return 0}\n\nconsole.log(editDist(str1,str2))",
      expectedOutput: "3",
    },
    {
      key: "cmldl0",
      title: "Longest Increasing Subsequence",
      description: "Longest Increasing Subsequence | DP-3",
      num_question: "(1/1)",
      difficulty: "Medium",
      categories: ["Dynamic Programming"],
      task: "Let us discuss the Longest Increasing Subsequence (LIS) problem as an example problem that can be solved using Dynamic Programming. \n\nThe Longest Increasing Subsequence (LIS) problem is to find the length of the longest subsequence of a given sequence such that all elements of the subsequence are sorted in increasing order. \n\nFor example, the length of LIS for {10, 22, 9, 33, 21, 50, 41, 60, 80} is 6 and LIS is {10, 22, 33, 50, 60, 80}. ",
      code: "let arr=[10, 22, 9, 33, 21, 50, 41, 60]\n\nfunction lisLength(array,/* other relevant args */) { return 0}\n\nconsole.log(lisLength(arr))",
      expectedOutput: "5",
    },
    {
      key: "aksjdhsjfd",
      title: "Backend Engineer Challenge",
      description:
        "How well do you understand database optimizations? Can you write scalable backend systems?",
      num_question: "#2",
      difficulty: "Hard",
      categories: ["RHB challenge", "Sorting And Searching"],
      task: "K’th Smallest Element in Unsorted Array (Expected Linear Time).\n\nGiven an array and a number k where k is smaller than the size of the array, we need to find the k’th smallest element in the given array. It is given that all array elements are distinct.",
      code: "let arr = [7, 10, 4, 3, 20, 15]\nlet k = 4\n\nlet smallest = 0\n\nconsole.log(smallest)",
      expectedOutput: "10",
    },
  ],
};
